---
- name: Creates directory
  file:
    dest: "/opt/ovs/conf"
    state: directory
    mode: 0750
    owner: root
    group: root

- name: OVS | Create OVS certs dkrectory
  file:
    dest: "{{ ovs_cert_dir }}"
    state: directory
    mode: 0750
    owner: root
    group: root

- name: OVS | Link etcd certificates for ovs-node
  file:
    src: "{{ etcd_cert_dir }}/{{ item.s }}"
    dest: "{{ ovs_cert_dir }}/{{ item.d }}"
    state: hard
    force: yes
  with_items:
    - {s: "ca.pem", d: "ca_cert.crt"}
    - {s: "node-{{ inventory_hostname }}.pem", d: "cert.crt"}
    - {s: "node-{{ inventory_hostname }}-key.pem", d: "key.pem"}

- name: Cloud | Copy cni plugins from hyperkube
  command: "{{ docker_bin_dir }}/docker run --rm -v /opt/cni/bin:/cnibindir {{ hyperkube_image_repo }}:{{ hyperkube_image_tag }} /bin/cp -r /opt/cni/bin/. /cnibindir/"
  register: cni_task_result
  until: cni_task_result.rc == 0
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  changed_when: false

- name: OVS | Copy OVS cni from docker image
  command: "{{ docker_bin_dir }}/docker run --rm -v /opt/cni/bin:/opt/cni/bin hwchiu/ovs-cni:latest -b /opt/cni/bin"
  register: ovs_cni_task_result
  until: ovs_cni_task_result.rc == 0
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  changed_when: false

- name: Multus-CNI | Copy Multus-CNI
  command: "{{ docker_bin_dir }}/docker run --rm -v /opt/cni/bin:/opt/cni/bin -v /etc/cni/net.d:/opt/cni/conf -v /opt/ovs/conf:/opt/cni/yaml hwchiu/docker-multus-cni:latest -b /opt/cni/bin"
  register: multus_cni_task_result
  until: multus_cni_task_result.rc == 0
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  changed_when: false

- name: ovs | cni conf
  template:
    src: "{{item.file}}.j2"
    dest: "/etc/cni/net.d/{{item.file}}"
  with_items:
    - {name: mulus-cni, file: multus-cni.conf, type: deployment }
  register: manifests
  owner: kube

- name: OVS | Set cni directory permissions
  file:
    path: /opt/cni/bin
    state: directory
    owner: kube
    recurse: true
    mode: "u=rwX,g-rwx,o-rwx"

- name: Install OpenvSwitch on ubuntu
  apt:
      name: openvswitch-switch
      state: present
- name: service | Ensuring OVS Service Is Started And Enabled On Boot
  service:
    name: "openvswitch-switch"
    state: "started"
    enabled: true
  become: true

- name: fetch the kubeconfig from master server
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: files/admin.conf
    flat: yes
  when: inventory_hostname == groups['kube-master'][0]

- name: copy the kubeconfig from master to minion node
  copy:
    src: files/admin.conf
    dest: /etc/kubernetes/admin.conf
  when: inventory_hostname not in groups['kube-master']

- name: remove kubeconfig
  local_action: file path=files/admin.conf state=absent
  become: no
  when: inventory_hostname == groups['kube-master'][0]
